// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Champions = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Champions'
  /** The name of the champion */
  name: string
  avatar?: string | undefined
  championships: ChampionQuote[]
  /** MDX file body */
  body: MDX

}  

/** Nested types */
export type ChampionQuote = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'ChampionQuote'
  period: string
  quote: string

}  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Champions
export type DocumentTypeNames = 'Champions'

export type NestedTypes = ChampionQuote
export type NestedTypeNames = 'ChampionQuote'

export type DataExports = {
  allDocuments: DocumentTypes[]
  allChampions: Champions[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Champions: Champions
}

export type NestedTypeMap = {
  ChampionQuote: ChampionQuote
}

 